{"version":3,"sources":["firebase_config.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","message_ref","collection","query","where","uid","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","dummy","useRef","sendMessage","e","a","preventDefault","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","undefined","reverse","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","type","props","messageClass","src","alt","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAYCA,IAASC,KAAKC,OAA0CF,IAASG,MAA1CH,IAASI,cAVlB,CACXC,OAAQ,0CACRC,WAAY,4CACZC,UAAW,4BACXC,cAAe,wCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKJX,QAAf,E,qCCNMY,EAAOZ,EAASY,OAChBC,EAAYb,EAASa,YAmB3B,SAASC,IAKL,OACI,wBAAQC,UAAU,UAAUC,QALC,WAC7B,IAAMC,EAAW,IAAIjB,EAASY,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAGrB,qBAIR,SAASG,IACL,OAAOR,EAAKS,aACR,wBAAQL,QAAS,kBAAMJ,EAAKU,WAA5B,sBAIR,SAASC,IACL,IAAMC,EAAcX,EAAUY,WAAW,iBACnCC,EAAQF,EAAYG,MAAM,MAAM,KAAK,CAAC,+BAA+Bf,EAAKS,YAAYO,MACvFC,QAAQ,YAAY,QAAQC,MAAM,IAHvB,EAKGC,YAAkBL,EAAO,CAACM,QAAS,OAA/CC,EALS,sBAMkBC,mBAAS,IAN3B,mBAMTC,EANS,KAMEC,EANF,KAQVC,EAAQC,mBACRC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDAChBD,EAAEE,iBADc,EAEQ9B,EAAKS,YAAtBO,EAFS,EAETA,IAAKe,EAFI,EAEJA,SACM,KAAdR,EAHY,iEAIVX,EAAYoB,IAAI,CAClBC,KAAMV,EACNP,MACAe,WACAG,UAAW9C,EAASa,UAAUkC,WAAWC,oBAR7B,OAWhBZ,EAAa,IAEbC,EAAMY,QAAQC,eAAe,CAACC,SAAU,WAbxB,2CAAH,sDAgBjB,OACI,qCACI,sCACkBC,IAAbnB,GAA0BA,EAASoB,UAAUC,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAC/E,qBAAKC,IAAKtB,OAEd,uBAAMuB,SAAUrB,EAAaxB,UAAU,OAAvC,UACI,uBAAO8C,MAAO1B,EAAW2B,SAAU,SAACtB,GAAD,OAAOJ,EAAaI,EAAEuB,OAAOF,UAChE,wBAAQG,KAAK,SAAb,SAAsB,mBAAGjD,UAAU,iBAAb,0BAMtC,SAASyC,EAAYS,GAAQ,IAAD,EACMA,EAAMR,QAA7BZ,EADiB,EACjBA,KAAMjB,EADW,EACXA,IAAKe,EADM,EACNA,SAEZuB,EAAetC,IAAQhB,EAAKS,YAAYO,IAAM,OAAS,WAE7D,OACI,sBAAKb,UAAS,kBAAamD,GAA3B,UACI,qBAAKC,IAAKxB,EAAUyB,IAAI,aACxB,8BAAMvB,OAMHwB,MArFf,WAAgB,IAAD,EACIC,YAAa1D,GAArB2D,EADI,oBAEX,OACI,sBAAKxD,UAAU,MAAf,UACI,mCACI,8CACA,cAACK,EAAD,OAEJ,kCACKmD,EAAO,cAAChD,EAAD,IAAc,cAACT,EAAD,UCTvB0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c8edd57b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nconst config = {\n    apiKey: \"AIzaSyDgFG6npILcyixEjb-MUjuf5tBrw2dUTzg\",\n    authDomain: \"react-firebase-chat-a7221.firebaseapp.com\",\n    projectId: \"react-firebase-chat-a7221\",\n    storageBucket: \"react-firebase-chat-a7221.appspot.com\",\n    messagingSenderId: \"356316568421\",\n    appId: \"1:356316568421:web:d41e35bf3ff96b8cdcdf8c\",\n    measurementId: \"G-M860FG15VC\"\n}\n\n!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\n\nexport default firebase","import {useState, useRef} from \"react\";\nimport './App.css';\nimport firebase from './firebase_config';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\nfunction App() {\n    const [user] = useAuthState(auth)\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>ðŸ’¬</h1>\n                <SignOut/>\n            </header>\n            <section>\n                {user ? <ChatRoom/> : <SignIn/>}\n            </section>\n        </div>\n    );\n}\n\n\nfunction SignIn() {\n    const signInWithGoogleProvider = () => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        auth.signInWithPopup(provider);\n    }\n    return (\n        <button className=\"sign-in\" onClick={signInWithGoogleProvider}>Sign in</button>\n    )\n}\n\nfunction SignOut() {\n    return auth.currentUser && (\n        <button onClick={() => auth.signOut()}>sign out</button>\n    )\n}\n\nfunction ChatRoom() {\n    const message_ref = firestore.collection(\"chat_messages\")\n    const query = message_ref.where(\"uid\",\"in\",[\"ilSUvcLqflTBDPKeFgdAsrs43Wp2\",auth.currentUser.uid])\n        .orderBy(\"createdAt\",\"desc\").limit(10)\n\n    const [messages] = useCollectionData(query, {idField: 'id'});\n    const [formValue, setFormValue] = useState('')\n\n    const dummy = useRef()\n    const sendMessage = async (e) => {\n        e.preventDefault()\n        const {uid, photoURL} = auth.currentUser;\n        if (formValue === '') return;\n        await message_ref.add({\n            text: formValue,\n            uid,\n            photoURL,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setFormValue('');\n\n        dummy.current.scrollIntoView({behavior: 'smooth'})\n    }\n\n    return (\n        <>\n            <main>\n                {messages !== undefined && messages.reverse().map(msg => <ChatMessage key={msg.id} message={msg}/>)}\n                <div ref={dummy}/>\n            </main>\n            <form onSubmit={sendMessage} className=\"form\">\n                <input value={formValue} onChange={(e) => setFormValue(e.target.value)}/>\n                <button type=\"submit\"><i className=\"material-icons\">send</i></button>\n            </form>\n        </>\n    )\n}\n\nfunction ChatMessage(props) {\n    const {text, uid, photoURL} = props.message\n\n    const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received'\n\n    return (\n        <div className={`message ${messageClass}`}>\n            <img src={photoURL} alt=\"user-pic\"/>\n            <div>{text}</div>\n        </div>\n    )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}